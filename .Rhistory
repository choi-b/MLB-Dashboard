group_by(teamID)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019) %>%
group_by(teamID)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(df_bat)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019) %>%
select(teamID, G, AB, R, H, X2B, X3B, HR, RBI, SB, CS, BB, SO, IBB, HBP, SH, SF, GIDP)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019) %>%
select(teamID, G, AB, R, H, X2B, X3B, HR, RBI, SB, CS, BB, SO, IBB, HBP, SH, SF, GIDP) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(df_bat)
View(df_bat)
## Look at team performance (2019)
#go back to the df_bat dataset
df_bat %>%
filter(yearID==2019) %>%
select(4, 6:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
## Look at team performance (2019)
#use the df_bat dataset
Teams_2019 <-
df_bat %>%
filter(yearID==2019) %>%
select(4, 6:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
rm(Teams_2019)
## Look at team performance (2019)
#use the df_bat dataset
teams_2019 <-
df_bat %>%
filter(yearID==2019) %>%
select(4, 6:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019)
rm(teams_2019)
head(df_bat)
## Look at team performance (2019)
#use the df_bat dataset
teams_2019 <-
df_bat %>%
filter(yearID==2019) %>%
select(4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019)
#Teams with most hits
teams_2019 %>%
arrange(desc(H))
#Most HR
teams_2019 %>%
arrange(desc(HR))
#Teams with most hits
teams_2019 %>%
arrange(desc(H))
#Most HR
teams_2019 %>%
arrange(desc(HR))
#Most RBI
teams_2019 %>%
arrange(desc(RBI))
teams_2019 %>%
arrange(desc(R)) #Minnesota Twins
teams_2019 %>%
arrange(SO) #
#Teams with most hits
teams_2019 %>%
arrange(desc(H)) #Boston Red Sox
#Most HR
teams_2019 %>%
arrange(desc(HR)) #Minnesota Twins
teams_2019 %>%
filter(teamID=='WAS')
#Teams with most hits
teams_2019 %>%
arrange(desc(H)) #Boston Red Sox
#Most HR
teams_2019 %>%
arrange(desc(HR)) #Minnesota Twins
#Most RBI
teams_2019 %>%
arrange(desc(RBI)) #Minnesota Twins
#Least number of Strikeouts
teams_2019 %>%
arrange(SO) #Houston Astros
#Teams with most hits
teams_2019 %>%
arrange(desc(H)) #Boston Red Sox
#Most HR
teams_2019 %>%
arrange(desc(HR)) #Minnesota Twins
#Most RBI
teams_2019 %>%
arrange(desc(RBI)) #Minnesota Twins
#Least number of Strikeouts
teams_2019 %>%
arrange(SO) #Houston Astros
head(df_bat)
#Most HR
teams_2019 %>%
arrange(desc(HR)) #Minnesota Twins
#Most HR
teams_2019 %>%
arrange(desc(HR)) #Minnesota Twins
#Most HR
teams_2019 %>%
arrange(desc(HR)) %>%
print(n=30) #Minnesota Twins
#Most HR
teams_2019 %>%
arrange(desc(HR)) %>%
print(n=15) #Minnesota Twins
df_postbat %>%
filter(yearID==2019)
#Look at WAS's postbatting stats
teams_2019post <-
df_postbat %>%
filter(yearID==2019) %>%
select(4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019post)
#Teams with most hits
teams_2019post %>%
arrange(desc(H)) #Boston Red Sox
#Most HR
teams_2019post %>%
arrange(desc(HR)) %>% #Minnesota Twins
print(n=15)
#Most RBI
teams_2019post %>%
arrange(desc(RBI)) #Minnesota Twins
head(teams_2019)
head(df_postbat)
#Look at WAS's postbatting stats
teams_2019post <-
df_postbat %>%
filter(yearID==2019) %>%
select(2,4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019post)
#Look at WAS's postbatting stats
teams_2019post <-
df_postbat %>%
filter(yearID==2019) %>%
select(2,4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
#Look at WAS's postbatting stats
teams_2019post <-
df_postbat %>%
filter(yearID==2019) %>%
select(4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
#Teams with most hits
teams_2019post %>%
arrange(desc(H)) #Boston Red Sox
#Most HR
teams_2019post %>%
arrange(desc(HR)) %>% #Minnesota Twins
print(n=15)
#Most RBI
teams_2019post %>%
arrange(desc(RBI)) #Minnesota Twins
#Least number of Strikeouts
teams_2019 %>%
arrange(SO) #Houston Astros
#Least number of Strikeouts
teams_2019post %>%
arrange(SO) #Houston Astros
#Look at team batting avg
head(teams_2019post)
teams_2019post %>%
mutate(TeamBatting_Avg = H/AB)
#Look at team batting avg
head(teams_2019post)
teams_2019post %>%
mutate(TeamBatting_Avg = H/AB) %>%
arrange(desc(TeamBatting_Avg))
#Check out team SO rate
teams_2019post %>%
mutate(TeamSO_Rate = SO/AB) %>%
arrange(desc(TeamSO_Rate))
#Check out team SO rate
teams_2019post %>%
mutate(TeamSO_Rate = SO/AB) %>%
arrange(TeamSO_Rate) #
teams_2019post %>%
mutate(TeamBatting_Avg = H/AB) %>%
arrange(desc(TeamBatting_Avg)) #WAS (along with OAK) did have the best batting avg as a team in the postseason.
## Fielding Dataset ##
head(df_field)
## Pitching Dataset ##
head(df_pitch)
#See sample data
#read.csv("./Data/AllstarFull.csv") #ALL STARs
#read.csv("./Data/Batting.csv") #Batting stats
#read.csv("./Data/BattingPost.csv") #Postseason Batting (has rounds as well)
#read.csv("./Data/Fielding.csv") #Fielding stats (assists, errors, DP, etc.)
#read.csv("./Data/Pitching.csv") #Pitching stats
#read.csv("./Data/Salaries.csv") #Salaries by year
read.csv("./Data/PitchingPost.csv") #Salaries by year
df_postpitch <- read.csv("./Data/PitchingPost.csv") #Postseason Pitching
#Check out postseason pitching
head(df_postpitch)
#Look at WAS's postbatting stats
rm(teams_2019post)
#Look at WAS's postbatting stats
teams_2019postbat <-
df_postbat %>%
filter(yearID==2019) %>%
select(4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
#Teams with most hits
teams_2019postbat %>%
arrange(desc(H)) #HOU
#Most HR
teams_2019postbat %>%
arrange(desc(HR)) %>% #HOU
print(n=15)
#Most HR
teams_2019postbat %>%
arrange(desc(HR)) %>% #HOU
print(n=15)
#Most RBI
teams_2019postbat %>%
arrange(desc(RBI)) #WAS
#Least number of Strikeouts
teams_2019postbat %>%
arrange(SO) #Houston Astros
#Look at WAS's postbatting stats
teams_2019postbat <-
df_postbat %>%
filter(yearID==2019) %>%
select(4, 7:22) %>%
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019postbat)
#Teams with most hits
teams_2019postbat %>%
arrange(desc(H)) #HOU
#Most HR
teams_2019postbat %>%
arrange(desc(HR)) #HOU
#Look at team batting avg
head(teams_2019postbat)
#Look at team batting avg
head(teams_2019postbat)
teams_2019postbat %>%
mutate(TeamBatting_Avg = H/AB) %>%
arrange(desc(TeamBatting_Avg)) #WAS (along with OAK) did have the best batting avg as a team in the postseason.
#Check out team SO rate
teams_2019postbat %>%
mutate(TeamSO_Rate = SO/AB) %>%
arrange(TeamSO_Rate) #WAS had a great SO rate as well (2nd after HOU)
#Check out postseason pitching
head(df_postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019) %>%
select(4, 20) %>%
group_by(teamID) %>%
summarise(TeamERA = mean(ERA))
head(teams_2019postpitch)
rm(teams_2019postpitch)
#Check out postseason pitching
head(df_postpitch)
df_postpitch %>%
filter(yearID==2019) %>%
select(4, 20) %>%
group_by(teamID) %>%
summarise(TeamERA = mean(ERA))
#Check out postseason pitching
head(df_postpitch)
#Check out postseason pitching
head(df_postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019)
head(teams_2019postpitch)
View(teams_2019postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019) %>%
select(4,13,15,16:19)
head(teams_2019postpitch)
#check mean opponent's batting average
teams_2019postpitch %>%
group_by(teamID) %>%
summarise(OppBA = mean(BAOpp))
#check mean opponent's batting average
teams_2019postpitch %>%
group_by(teamID) %>%
summarise(OppBA = mean(BAOpp)) %>%
arrange(desc(OppBA))
#check mean opponent's batting average
teams_2019postpitch %>%
group_by(teamID) %>%
summarise(OppBA = mean(BAOpp)) %>%
arrange(OppBA)
head(teams_2019postpitch)
head(teams_2019postpitch)
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
group_by(teamID) %>%
summarise_each(list(sum))
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5)
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum))
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=3*IPOuts) #create Innings Pitched. IPOuts/3 = IP
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=3*IPouts) #create Innings Pitched. IPOuts/3 = IP
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=3*IPouts,
Team_ERA = (9*ER)/IP) #IP = IPouts/3 & ERA = 9*ER / IP
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=IPouts/3,
Team_ERA = (9*ER)/IP) #IP = IPouts/3 & ERA = 9*ER / IP
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:5) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=IPouts/3,
Team_ERA = (9*ER)/IP)  %>% #IP = IPouts/3 & ERA = 9*ER / IP
arrange(Team_ERA)
head(teams_2019postpitch)
#Check out postseason pitching
head(df_postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019) %>%
select(4,13:19)
head(teams_2019postpitch)
#check mean opponent's batting average
teams_2019postpitch %>%
group_by(teamID) %>%
summarise(OppBA = mean(BAOpp)) %>%
arrange(OppBA) #Opponent's batting average was quite low for WAS (#4) indicating pitching overall, was solid
head(teams_2019postpitch)
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:7) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=IPouts/3,
Team_ERA = (9*ER)/IP)  %>% #IP = IPouts/3 & ERA = 9*ER / IP
arrange(Team_ERA) #WAS had a solid team ERA as well
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:7) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=IPouts/3, #IP = IPouts/3
Team_ERA = (9*ER)/IP, #ERA = 9*ER / IP
Team_WHIP = (H+BB)/IP) %>% #WHIP = (H+BB)/IP
arrange(Team_ERA) #WAS had a solid team ERA as well
head(df_bat)
View(teams_2019postbat)
View(teams_2019postpitch)
#Check out postseason pitching
head(df_postpitch)
head(teams_2019postpitch)
head(teams_2019postpitch)
#Check out postseason pitching
head(df_postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019) %>%
select(4,13:19)
head(teams_2019postpitch)
#Check out postseason pitching
head(df_postpitch)
#Check out postseason pitching
head(df_postpitch)
df_postpitch <- read.csv("./Data/PitchingPost.csv") #Postseason Pitching
#Check out postseason pitching
head(df_postpitch)
#Check out postseason pitching
head(df_postpitch)
teams_2019postpitch <-
df_postpitch %>%
filter(yearID==2019) %>%
select(4,13:19)
head(teams_2019postpitch)
#Calculate number of innings pitched/ER to calculate team ERA
teams_2019postpitch %>%
select(1:7) %>%
group_by(teamID) %>%
summarise_each(list(sum)) %>%
mutate(IP=IPouts/3, #IP = IPouts/3
Team_ERA = (9*ER)/IP, #ERA = 9*ER / IP
Team_WHIP = (H+BB)/IP) %>% #WHIP = (H+BB)/IP
arrange(Team_ERA) #WAS had a solid team ERA as well
#Prediction 1:
head(df_bat)
#Prediction 1:
head(df_bat_decade)
#Prediction 1:
head(df_bat_decade2)
#Prediction 1:
head(df_bat_decade3)
#Prediction 1: Predict whether a team will qualify for the postseason based on team performance
teams_2019
head(teams_2019)
View(teams_2019postbat)
teams_2019postbat$teamID
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1))
teams_2019 %>%
select(1:17)
teams_2019 %>%
select(1:17) %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1))
teams_2019 %>%
select(17) %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1))
teams_2019 %>%
select(1) %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1))
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1 else 0))
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
FALSE ~ 0))
test <-
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
FALSE ~ 0))
View(test)
test <-
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
else ~ 0))
test <-
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
elif ~ 0))
test <-
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
TRUE ~ 0))
View(teams_2019)
View(teams_2019postbat)
View(test)
teams_2019_bats <-
teams_2019 %>%
mutate(Postseason = case_when(teamID %in% teams_2019postbat$teamID ~ 1,
TRUE ~ 0))
head(teams_2019_bats)
rm(test)
View(teams_2019_bats)
head(df_pitch)
#get teams pitching stats for 2019
teams_2019_pitch <-
df_pitch %>%
filter(yearID==2019) %>%
select(4, 6:7,11:18,22:25,27:30) %>% #'G' column: meaningless here since it's by team.
group_by(teamID) %>%
summarise_each(list(sum))
head(teams_2019_pitch)
View(teams_2019_pitch)
View(teams_2019_bats)
head(teams_2019_pitch)
head(teams_2019_bats)
View(teams_2019_pitch)
